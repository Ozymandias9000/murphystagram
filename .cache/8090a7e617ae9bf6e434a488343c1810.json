{"dependencies":[{"name":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/package.json","includedInParent":true,"mtime":1530984832683},{"name":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/.babelrc","includedInParent":true,"mtime":1530987324534},{"name":"react","loc":{"line":1,"column":33},"parent":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/client/components/Comments.js","resolved":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/react/react.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Comments = function (_Component) {\n  _inherits(Comments, _Component);\n\n  function Comments() {\n    _classCallCheck(this, Comments);\n\n    return _possibleConstructorReturn(this, (Comments.__proto__ || Object.getPrototypeOf(Comments)).apply(this, arguments));\n  }\n\n  _createClass(Comments, [{\n    key: 'renderComment',\n    value: function renderComment(comment, i) {\n      var postId = this.props.params.postId;\n      var commentId = this.props.comments[postId][i].commentId;\n\n      return _react2.default.createElement(\n        'div',\n        { className: 'comment', key: i },\n        _react2.default.createElement(\n          'p',\n          null,\n          _react2.default.createElement(\n            'strong',\n            null,\n            comment.user\n          ),\n          comment.text,\n          _react2.default.createElement(\n            'button',\n            { className: 'remove-comment', onClick: this.props.removeComment.bind(null, postId, i, commentId) },\n            '\\xD7'\n          )\n        )\n      );\n    }\n  }, {\n    key: 'handleSubmit',\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      var postId = this.props.params.postId;\n\n      var author = this.refs.author.value;\n      var comment = this.refs.comment.value;\n\n      this.props.addComment(postId, author, comment);\n      this.refs.commentForm.reset();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n\n      return _react2.default.createElement(\n        'div',\n        { className: 'comments' },\n        this.props.postComments.map(this.renderComment.bind(this)),\n        _react2.default.createElement(\n          'form',\n          { ref: 'commentForm', className: 'comment-form', onSubmit: this.handleSubmit.bind(this) },\n          _react2.default.createElement('input', { type: 'text', ref: 'author', placeholder: 'author' }),\n          _react2.default.createElement('input', { type: 'text', ref: 'comment', placeholder: 'comment' }),\n          _react2.default.createElement('input', { type: 'submit', hidden: true })\n        )\n      );\n    }\n  }]);\n\n  return Comments;\n}(_react.Component);\n\nexports.default = Comments;","map":null},"hash":"9f8f8715beb78d3103c2af7790055fd0","cacheData":{"env":{}},"id":285}