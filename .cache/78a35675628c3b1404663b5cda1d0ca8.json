{"dependencies":[{"name":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/react/package.json","includedInParent":true,"mtime":1530981824985},{"name":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/package.json","includedInParent":true,"mtime":1530984832683},{"name":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/.babelrc","includedInParent":true,"mtime":1530987324534},{"name":"./reactProdInvariant","loc":{"line":10,"column":29},"parent":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/react/lib/onlyChild.js","resolved":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/react/lib/reactProdInvariant.js"},{"name":"./ReactElement","loc":{"line":12,"column":27},"parent":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/react/lib/onlyChild.js","resolved":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/react/lib/ReactElement.js"},{"name":"fbjs/lib/invariant","loc":{"line":14,"column":24},"parent":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/react/lib/onlyChild.js","resolved":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/fbjs/lib/invariant.js"}],"generated":{"js":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactElement = require('./ReactElement');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  !ReactElement.isValidElement(children) ? undefined !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;\n  return children;\n}\n\nmodule.exports = onlyChild;","map":null},"hash":"b245b7547b1453b7821c75fa082a9381","cacheData":{"env":{}},"id":307}