{"dependencies":[{"name":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/react-router/package.json","includedInParent":true,"mtime":1530981824984},{"name":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/package.json","includedInParent":true,"mtime":1530984832683},{"name":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/.babelrc","includedInParent":true,"mtime":1530987324534},{"name":"./routerWarning","loc":{"line":5,"column":29},"parent":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/react-router/lib/RouteContext.js","resolved":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/react-router/lib/routerWarning.js"},{"name":"react","loc":{"line":9,"column":21},"parent":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/react-router/lib/RouteContext.js","resolved":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/react/react.js"}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _routerWarning = require('./routerWarning');\n\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nvar object = _react2.default.PropTypes.object;\n\n/**\n * The RouteContext mixin provides a convenient way for route\n * components to set the route in context. This is needed for\n * routes that render elements that want to use the Lifecycle\n * mixin to prevent transitions.\n */\n\nvar RouteContext = {\n\n  propTypes: {\n    route: object.isRequired\n  },\n\n  childContextTypes: {\n    route: object.isRequired\n  },\n\n  getChildContext: function getChildContext() {\n    return {\n      route: this.props.route\n    };\n  },\n  componentWillMount: function componentWillMount() {\n    undefined !== 'production' ? (0, _routerWarning2.default)(false, 'The `RouteContext` mixin is deprecated. You can provide `this.props.route` on context with your own `contextTypes`. http://tiny.cc/router-routecontextmixin') : void 0;\n  }\n};\n\nexports.default = RouteContext;\nmodule.exports = exports['default'];","map":null},"hash":"332c72dc60fde18f019eb999cf3d49df","cacheData":{"env":{}},"id":246}