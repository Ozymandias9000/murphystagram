{"dependencies":[{"name":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/package.json","includedInParent":true,"mtime":1530984832683},{"name":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/.babelrc","includedInParent":true,"mtime":1530987324534}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction posts() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments[1];\n\n  switch (action.type) {\n    case 'FETCH_POSTS_START':\n      return state;\n    case 'FETCH_POSTS_SUCCESS':\n      return [].concat(_toConsumableArray(action.data));\n    case 'FETCH_POSTS_FAILURE':\n      return state;\n    case 'ADD_POST_SUCCESS':\n      var postId = action.postId,\n          display_src = action.display_src,\n          caption = action.caption;\n\n      return [].concat(_toConsumableArray(state), [{\n        code: postId,\n        likes: 0,\n        display_src: display_src,\n        caption: caption\n      }]);\n    // Work out how to log errors\n    case 'ADD_POST_FAILURE':\n      return state;\n\n    case 'INCREMENT_LIKES_SUCCESS':\n      var i = action.index;\n      return [].concat(_toConsumableArray(state.slice(0, i)), [_extends({}, state[i], { likes: state[i].likes + 1 })], _toConsumableArray(state.slice(i + 1)));\n    // Work out how to log errors\n    case 'INCREMENT_LIKES_FAILURE':\n      return state;\n    default:\n      return state;\n  }\n}\n\nexports.default = posts;","map":null},"hash":"9f19a9519acbd6f15e73220155d434d2","cacheData":{"env":{}},"id":423}