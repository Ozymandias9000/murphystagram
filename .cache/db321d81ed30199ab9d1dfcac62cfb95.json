{"dependencies":[{"name":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/package.json","includedInParent":true,"mtime":1530984832683},{"name":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/.babelrc","includedInParent":true,"mtime":1530987324534}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction postComments() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments[1];\n\n  switch (action.type) {\n    case \"ADD_COMMENT_SUCCESS\":\n      return [].concat(_toConsumableArray(state), [{\n        user: action.author,\n        text: action.comment,\n        commentId: action.commentId\n      }]);\n    case \"ADD_COMMENT_FAILURE\":\n      return state;\n    case \"REMOVE_COMMENT_SUCCESS\":\n      return [].concat(_toConsumableArray(state.slice(0, action.i)), _toConsumableArray(state.slice(action.i + 1)));\n    case \"REMOVE_COMMENT_FAILURE\":\n      return state;\n    default:\n      return state;\n  }\n}\n\nfunction comments() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments[1];\n\n  if (typeof action.postId !== 'undefined') {\n    return _extends({}, state, _defineProperty({}, action.postId, postComments(state[action.postId], action)));\n  }\n  switch (action.type) {\n    case 'FETCH_COMMENTS_START':\n      return state;\n    case 'FETCH_COMMENTS_SUCCESS':\n      return action.data;\n    case 'FETCH_COMMENTS_FAILURE':\n      return state;\n    default:\n      return state;\n  }\n}\n\nexports.default = comments;","map":null},"hash":"dde1edc50276aab61cfed5145a166fd2","cacheData":{"env":{}},"id":424}