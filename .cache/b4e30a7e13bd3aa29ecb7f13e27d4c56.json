{"dependencies":[{"name":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/react-dom/package.json","includedInParent":true,"mtime":1530981824985},{"name":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/package.json","includedInParent":true,"mtime":1530984832683},{"name":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/.babelrc","includedInParent":true,"mtime":1530987324534},{"name":"./reactProdInvariant","loc":{"line":11,"column":29},"parent":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/react-dom/lib/Danger.js","resolved":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/react-dom/lib/reactProdInvariant.js"},{"name":"./DOMLazyTree","loc":{"line":13,"column":26},"parent":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/react-dom/lib/Danger.js","resolved":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/react-dom/lib/DOMLazyTree.js"},{"name":"fbjs/lib/ExecutionEnvironment","loc":{"line":14,"column":35},"parent":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/react-dom/lib/Danger.js","resolved":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/fbjs/lib/ExecutionEnvironment.js"},{"name":"fbjs/lib/createNodesFromMarkup","loc":{"line":16,"column":36},"parent":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/react-dom/lib/Danger.js","resolved":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/fbjs/lib/createNodesFromMarkup.js"},{"name":"fbjs/lib/emptyFunction","loc":{"line":17,"column":28},"parent":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/react-dom/lib/Danger.js","resolved":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/fbjs/lib/emptyFunction.js"},{"name":"fbjs/lib/invariant","loc":{"line":18,"column":24},"parent":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/react-dom/lib/Danger.js","resolved":"/home/nick/Desktop/Code/Learn-Redux-Starter-Files/test-app/node_modules/fbjs/lib/invariant.js"}],"generated":{"js":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar createNodesFromMarkup = require('fbjs/lib/createNodesFromMarkup');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\n\nvar Danger = {\n  /**\n   * Replaces a node with a string of markup at its current position within its\n   * parent. The markup must render into a single root node.\n   *\n   * @param {DOMElement} oldChild Child node to replace.\n   * @param {string} markup Markup to render in place of the child node.\n   * @internal\n   */\n  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {\n    !ExecutionEnvironment.canUseDOM ? undefined !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;\n    !markup ? undefined !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;\n    !(oldChild.nodeName !== 'HTML') ? undefined !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;\n\n    if (typeof markup === 'string') {\n      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];\n      oldChild.parentNode.replaceChild(newChild, oldChild);\n    } else {\n      DOMLazyTree.replaceChildWithTree(oldChild, markup);\n    }\n  }\n};\n\nmodule.exports = Danger;","map":null},"hash":"32363a55809876fe9f6ab2bfaf24e7eb","cacheData":{"env":{}},"id":626}